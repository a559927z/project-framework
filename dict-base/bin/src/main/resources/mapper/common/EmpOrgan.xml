<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="net.chinahrd.mvc.pc.dao.admin.EmpOrganDao">

	<resultMap id="organMap" type="net.chinahrd.entity.dto.pc.admin.OrganDto">
		<id property="organizationId" column="organization_id" jdbcType="VARCHAR"/>
		<result property="customerId" column="customer_id" />
		<result property="organizationTypeId" column="organization_type_id" />
		<result property="organizationKey" column="organization_key" />
		<result property="organizationParentId" column="organization_parent_id" />
		<result property="organizationName" column="organization_name" jdbcType="VARCHAR" />
		<result property="note" column="note" />
		<result property="isSingle" column="is_single" />
		<result property="fullPath" column="full_path" />
		<result property="hasChildren" column="has_children" />
		<result property="halfCheck" column="half_check" />
		<result property="level" column="level" />
		<result property="depth" column="depth" />
		<result property="userId" column="user_id" />
		<result property="empId" column="emp_id" />
		<result property="userName" column="user_name" />
		<result property="userNameCh" column="user_Name_Ch" />
		
	</resultMap>
    <resultMap id="EmpMap" type="net.chinahrd.entity.dto.pc.admin.EmpDto">
        <id property="id" column="emp_id"/>
        <result property="empId" column="emp_id"/>
        <result property="empKey" column="emp_key"/>
        <result property="customerId" column="customer_id"/>
        <result property="empName" column="user_name_ch"/>
    </resultMap>

    <select id="findEmpById" resultMap="EmpMap">
        SELECT
        vde.emp_id,
        vde.emp_key,
        vde.customer_id,
        vde.user_name_ch
      FROM v_dim_emp vde
      WHERE vde.emp_id = #{empId} AND vde.customer_id = #{customerId}
    </select>


<!-- isOrganPermit==true 员工下所有数据权限 -->
	<!-- isOrganPermit==false 员工下所有带状态数据,用作机构树配置半勾情况 -->
	<select id="queryEmpOrgans" resultMap="organMap">
		SELECT DISTINCT
			vo.organization_id,
			vo.organization_name,
			vo.organization_parent_id,
			vo.full_path as fullPath,
			eo.half_check as halfCheck
		FROM
			emp_organization_relation eo
			INNER JOIN dict_dim_organization vo ON vo.organization_id = eo.organization_id AND vo.customer_id=eo.customer_id 
		WHERE
			eo.emp_id =#{empId} and eo.customer_id = #{customerId} 
		<if test="isOrganPermit == true">
			and ro.half_check = 0
		</if>
	</select>
	
	<!-- 删除员工下所有数据权限 -->
    <delete id="deleteEmpOrganization" parameterType="string">
		DELETE FROM emp_organization_relation WHERE emp_id &lt;&gt; #{empId} and customer_id = #{customerId}
    </delete>
    

	<select id="queryDimEmp" resultType="net.chinahrd.entity.dto.pc.emp.DimEmp">
		SELECT 
			t.v_dim_emp_id AS          vDimEmpId          ,
			t.customer_id  AS          customerId         ,
			t.emp_id       AS          empId              ,
			t.emp_key      AS          empKey             ,
			t.user_name    AS          userName           ,
			t.user_name_ch AS          userNameCh         ,
			t.emp_hf_id    AS          empHfId            ,
			t.emp_hf_key   AS          empHfKey           ,
			CONCAT(t.`emp_hf_key`,"(",hf.`user_name_ch`,")") AS empHfName,
			t.email AS                 email              ,
			t.passtime_or_fulltime AS  passtimeOrFulltime ,
			t.age AS                   age                ,
			t.company_age AS           companyAge         ,
			t.is_key_talent AS         isKeyTalent        ,
			t.sex           AS         sex                ,
			t.nation        AS         nation             ,
			t.degree_id     AS         degreeId           ,
			t.degree        AS         degree             ,
			t.native_place  AS         nativePlace        ,
			t.country       AS         country            ,
			t.birth_place   AS         birthPlace         ,
			t.birth_date    AS         birthDate          ,
			t.national_id   AS         nationalId         ,
			t.national_type AS         nationalType       ,
			t.marry_status  AS         marryStatus        ,
			t.patty_name    AS         pattyName          ,
			t.position_id   AS         positionId         ,
			t.position_name AS         positionName       ,
			t.organization_parent_id AS organizationParentId ,
			t.organization_parent_name AS organizationParentName,
			t.organization_id   AS     organId            ,
			t.organization_name AS     organName          ,
			t.sequence_id       AS     mainseqId          ,
			t.sequence_name     AS     mainseqName        ,
			t.sequence_sub_id   AS     subseqId           ,
			t.sequence_sub_name AS     subseqName         ,
			t.ability_id        AS     abilityId          ,
			t.ability_name      AS     abilityName        ,
			t.job_title_id      AS     jobTitleId         ,
			t.job_title_name    AS     jobTitleName       ,
			t.ability_lv_id     AS     abilitylvId        ,
			t.ability_lv_name   AS     abilitylvName      ,
			t.rank_name         AS     rankName           ,
			t.tel_phone         AS     telPhone           ,
			t.qq                AS     qq                 ,
			t.wx_code           AS     wxCode             ,
			t.address           AS     address            ,
			t.`contract` 	    AS 	   contract,
			t.contract_unit     AS     contractUnit       ,
			t.work_place_id     AS     workPlaceId        ,
			t.work_place        AS     workPlaceName      ,
			t.is_regular AS            isRegular          ,
			t.regular_date      AS     regularDate        ,    
			t.run_off_date AS runOffDate	, 
			t.channel_id        AS     applyChannel       ,
			t.refresh_date AS          refreshDate        ,
			t.c_id        AS  	          cId           ,  
			t.mark         AS          remark             ,
			t.entry_date   AS             entryDate       ,
			
			u.user_id AS 'user.userId',
			u.customer_id as 'user.customerId',
			u.emp_id as 'user.empId',
			u.`user_name` AS 'user.userName',
			u.`user_name_ch` AS 'user.userNameCh',
			u.user_key as 'user.userKey',
			u.`email` AS 'user.email',
			u.`note` AS 'user.note',
			u.is_lock as 'user.isLock'     
		FROM v_dim_emp t
		LEFT JOIN v_dim_emp hf ON t.`emp_hf_id`=hf.`emp_id`
		LEFT JOIN dict_dim_user u ON t.`emp_id` = u.`emp_id`
		<where>
			1=1
			AND t.emp_id = #{empId}
		</where>
	
	</select>

	<update id="updatevDimEmp">
		UPDATE v_dim_emp 
		SET
			emp_key     =#{empKey},                                      
			user_name   =#{userName},                                     
			user_name_ch=#{userNameCh},                                   
			emp_hf_id   =#{empHfId},                                      
			emp_hf_key  =#{empHfKey},                                     
			email      =#{email},                                        
			passtime_or_fulltime=#{passtimeOrFulltime},                           
			age         =#{age},         
			company_age =#{companyAge}, 
			sex          =#{sex},                          
			nation       =#{nation},                          
			degree_id    =#{degreeId},                                 
			degree       =#{degree},                          
			native_place =#{nativePlace},                              
			country      =#{country},                                   
			birth_place  =#{birthPlace},                               
			birth_date   =#{birthDate},                                
			national_id  =#{nationalId},                               
			national_type=#{nationalType},                             
			marry_status =#{marryStatus},                                
			patty_name   =#{pattyName},                                
			position_id  =#{positionId},                                  
			position_name=#{positionName},                             
			organization_parent_id=#{organizationParentId},  
			organization_parent_name=#{organizationParentName},     
			organization_id  =#{organId},                               
			organization_name=#{organName},                             
			sequence_id      =#{mainseqId},                                
			sequence_name    =#{mainseqName},                              
			sequence_sub_id  =#{subseqId},                                 
			sequence_sub_name=#{subseqName},                               
			ability_id       =#{abilityId},                                
			ability_name     =#{abilityName},                                   
			job_title_id     =#{jobTitleId},                                 
			job_title_name   =#{jobTitleName},                               
			ability_lv_id    =#{abilitylvId},                                
			ability_lv_name  =#{abilitylvName},                              
			rank_name        =#{rankName},                                   
			tel_phone        =#{telPhone},                                   
			qq               =#{qq},                                          
			wx_code          =#{wxCode},                                     
			address          =#{address},                                     
			contract_unit    =#{contractUnit},                                
			contract		 =#{contract},
			work_place_id    =#{workPlaceId},                                
			work_place       =#{workPlaceName},
			is_regular      =#{isRegular},                       
			regular_date     =#{regularDate}, 
			<if test="runOffDate != null and runOffDate != 'null' and runOffDate != ''">
				run_off_date = #{runOffDate},
			</if>                               
			channel_id       =#{applyChannel},                            
			refresh_date=#{refreshDate},                   
			mark        =#{remark},                
			entry_date  =#{entryDate}
		WHERE
			emp_id = #{empId}
			AND customer_id = #{customerId}
			
		
	</update>
	<insert id="addvDimEmp">
		insert into v_dim_emp(
			v_dim_emp_id,                                        
			customer_id ,                                        
			emp_id      ,                                        
			emp_key     ,                                        
			user_name   ,                                        
			user_name_ch,                                        
			emp_hf_id   ,                                        
			emp_hf_key  ,                                        
			email,                                               
			passtime_or_fulltime,                                
			age,<!-- 计算年龄 -->                                
			company_age,    <!-- 司龄 -->                        
			is_key_talent, 	<!-- 默认0非关键人才 -->             
			sex          ,                                       
			nation       ,                                       
			degree_id    ,                                       
			degree       ,                                       
			native_place ,                                       
			country      ,                                       
			birth_place  ,                                       
			birth_date   ,                                       
			national_id  ,                                       
			national_type,     
			<if test="marryStatus != null and marryStatus != '' and marryStatus != 'null'">                                  
				marry_status ,   
			</if>                                    
			patty_name   ,                                       
			position_id  ,                                       
			position_name,                                       
			organization_parent_id,    <!-- 工作部门id获取 -->   
			organization_parent_name,  <!-- 工作部门id获取 -->   
			organization_id  ,                                   
			organization_name,                                   
			sequence_id      ,                                   
			sequence_name    ,                                   
			sequence_sub_id  ,                                   
			sequence_sub_name,                                   
			ability_id       ,                                   
			ability_name     ,                                        
			job_title_id     ,                                     
			job_title_name   ,                                     
			ability_lv_id    ,                                     
			ability_lv_name  ,                                     
			rank_name        ,                                     
			tel_phone        ,                                     
			qq               ,                                     
			wx_code          ,                                     
			address          ,                                     
			contract_unit    ,                                     
			contract		 ,
			work_place_id    ,                                     
			work_place       ,
			is_regular,                                     
			regular_date     ,                                     
			channel_id       ,                                     
			refresh_date,   <!-- 等于插入时间 -->                                       
			c_id        ,  	<!-- 等于添加人的员工编码 -->                                       
			mark        ,   <!-- 默认新增 -->                                        
			entry_date  
		)
		VALUES(
			#{vDimEmpId},         
			#{customerId},          
			#{empId},              
			#{empKey},            
			#{userName},           
			#{userNameCh},         
			#{empHfId},            
			#{empHfKey},           
			#{email},              
			#{passtimeOrFulltime}, 
			#{age},
			#{companyAge},
			#{isKeyTalent},
			#{sex},
			#{nation},
			#{degreeId},       
			#{degree},
			#{nativePlace},    
			#{country},         
			#{birthPlace},     
			#{birthDate},      
			#{nationalId},     
			#{nationalType},   
			<if test="marryStatus != null and marryStatus != '' and marryStatus != 'null'">
				#{marryStatus},      
			</if>
			#{pattyName},      
			#{positionId},        
			#{positionName},   
			#{organizationParentId},
			#{organizationParentName},   
			#{organId},     
			#{organName},   
			#{mainseqId},      
			#{mainseqName},    
			#{subseqId},       
			#{subseqName},     
			#{abilityId},      
			#{abilityName},    
			#{jobTitleId},     
			#{jobTitleName},   
			#{abilitylvId},    
			#{abilitylvName},  
			#{rankName},       
			#{telPhone},       
			#{qq},              
			#{wxCode},         
			#{address},         
			#{contractUnit},    
			#{contract},
			#{workPlaceId},    
			#{workPlaceName},
			#{isRegular},  
			#{regularDate},    
			#{applyChannel},
			#{refreshDate},
			#{cId},
			#{remark},
			#{entryDate}
		)
	</insert>
	<!-- 员工配置数据 -->
    <insert id="addEmpOrganization" parameterType="net.chinahrd.entity.dto.pc.admin.EmpOrganizationDto">
      INSERT INTO emp_organization_relation
      (
        emp_organization_id,
        customer_id,
        emp_id,
        organization_id,
        half_check
      )
      VALUES
      <foreach collection="dtos" item="dto" separator=",">
      (
        #{dto.empOrganizationId},
        #{dto.customerId},
        #{dto.empId},
        #{dto.organizationId},
        #{dto.halfCheck}
      )
      </foreach>
     <!--  CALL pro_fetch_emp_organization( #{dto.customerId},'3cfd3db15ffc4c119e344e82eb8cbb19'); -->
    </insert>
    
</mapper>