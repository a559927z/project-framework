<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		"
       default-lazy-init="true">

    <context:component-scan base-package="com.ks.tx.xml"/>


    <!-- 使用tx标签配置的拦截器事务 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <!-- 第一个* 表示任意返回值类型 -->
        <!-- 第二个* 表示以任意名字开头的package. 如 com.xx. -->
        <!-- 第三个* 表示以任意名字开头的class的类名 如TestService -->
        <!-- 第四个* 表示 通配 *service下的任意class -->
        <!-- 最后二个.. 表示通配 方法可以有0个或多个参数 -->
        <aop:pointcut id="interceptorPointCuts" expression="execution(* com.ks.tx.xml.*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts"/>
    </aop:config>



    <!-- DAO接口所在包 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
        <property name="basePackage" value="com.ks.tx.xml"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 开发/测试环境 -->
    <beans profile="dev,test">
        <context:property-placeholder
                ignore-resource-not-found="true" ignore-unresolvable="true"
                location="classpath:conf/*.properties"/>
        <!-- datasource -->
        <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
              destroy-method="close">
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
            <property name="defaultAutoCommit" value="false"/>
        </bean>

        <!-- mybatis -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="plugins">
                <array>
                    <bean class="com.ks.mybatis.pagination.PaginationPlugin">
                        <property name="properties">
                            <value>
                                dialectClass=com.ks.mybatis.pagination.MySQLDialect
                            </value>
                        </property>
                    </bean>
                </array>
            </property>
            <property name="configLocation" value="classpath:/mybatis-config.xml"/>
            <!-- 显式指定Mapper文件位置 -->
            <property name="mapperLocations" value="classpath*:tx-mapper.xml"/>
        </bean>
    </beans>
</beans>